import java.util.List;
import java.util.ArrayList;


/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    private ItemRepository itemRepository;
    private SalesPromotionRepository salesPromotionRepository;

    public App(ItemRepository itemRepository, SalesPromotionRepository salesPromotionRepository) {
        this.itemRepository = itemRepository;
        this.salesPromotionRepository = salesPromotionRepository;
    }

    public String bestCharge(List<String> inputs) {
        //TODO: write code here
        int totalPrice = 0;
        int promo1save = 0;
        int promo2save = 0;
        ArrayList<String> promoItemString = new ArrayList<String>();
        int[] itemCount;
        String output = "============= Order details =============\n";
        for(int n = 0; n < inputs.size(); n++) {
            String[] itemTemp = inputs.get(n).split(" x ");
            for (Item orderItem : this.itemRepository.findAll()) {
                if(orderItem.getId().equals(itemTemp[0])){
                    totalPrice += orderItem.getPrice() * Integer.parseInt(itemTemp[1]);

                    output += orderItem.getName() + " x " + itemTemp[1] + " = " + (int)orderItem.getPrice() * Integer.parseInt(itemTemp[1]) + " yuan\n";
                    for(SalesPromotion promo : this.salesPromotionRepository.findAll()){
                        if(promo.getType().equals("50%_DISCOUNT_ON_SPECIFIED_ITEMS")){
                            for(String promoItemId : promo.getRelatedItems()){
                                if(orderItem.getId().equals(promoItemId)){
                                    promo2save += 0.5 * orderItem.getPrice() * Integer.parseInt(itemTemp[1]);
                                    promoItemString.add(orderItem.getName());
                                }
                            }
                        }
                    }
                }
            }
        }
        output += "-----------------------------------\n";
        if(totalPrice >= 30){
            promo1save = 6;
        }
        if(promo1save != 0 || promo2save != 0){
            output += "Promotion used:\n";
            if(promo1save >= promo2save) {
                output += "Deduct 6 yuan when the order reaches 30 yuan, saving 6 yuan\n";
                totalPrice -= promo1save;
            }
            else{
                output += "Half price for certain dishes (";
                for(int i = 0; i < promoItemString.size(); i++) {
                    output += promoItemString.get(i);
                    if(i !=  promoItemString.size()-1)
                        output += "，";
                }
                output += ")，saving " + promo2save + " yuan\n";
                totalPrice -= promo2save;
            }
            output += "-----------------------------------\n";
        }
        output += "Total：" + totalPrice + " yuan\n";
        output += "===================================";
        return output;
    }
}
